services:
  django:
    build: 
      context: .
      dockerfile: django.Dockerfile
    container_name: django
    volumes:
      - ./blockchain/build:/app/build
    networks:
      - barely_a_network
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      ganache:
        condition: service_healthy
    
    ports:
      - "8000:8000"

  db:
    image: postgres:17.4
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - barely_a_network
    env_file:
      - .env

  redis:
    image: redis:7.4.2
    env_file:
      - .env
    command: >
          --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    restart: unless-stopped
    networks:
      - barely_a_network

  prometheus:
    image: prom/prometheus:v2.53.4
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - barely_a_network
    depends_on:
      - django

  grafana:
    image: grafana/grafana:11.6.0
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - barely_a_network
    env_file:
      - .env
    environment:
      - GF_SERVER_ROOT_URL=${CAMPUS_HOST}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATHS=true
      - GF_AUTH_ANONYMOUS_ENABLED=true

    depends_on:
      - prometheus

  ganache:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.ganache
    container_name: ganache
    command: ganache-cli -h 0.0.0.0 -p 8545 -i 5777
    ports:
      - "8545:8545"
    networks:
      - barely_a_network
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8545"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 5s
    restart: always

  truffle:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.truffle
    container_name: truffle
    command: truffle migrate --network development
    volumes:
      - ./blockchain/build:/app/build
    depends_on:
      ganache:
        condition: service_healthy
    networks:
      - barely_a_network
    working_dir: /app
    restart: on-failure
    env_file:
      - .env
    environment:
      - HOST=${TRUFFLE_HOST}
      - PORT=${TRUFFLE_PORT}
      - NETWORK_ID=${TRUFFLE_NETWORK_ID}

  nginx:
    image: nginx:1.25
    container_name: nginx
    entrypoint: ["/bin/sh", "-c", "/entrypoint.sh"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/entrypoint.sh:/entrypoint.sh:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./.env:/app/.env:ro
    working_dir: /app
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - grafana
    networks:
      - barely_a_network

networks:
  barely_a_network:
    driver: bridge

volumes:
  postgres-data:
  grafana-data:
